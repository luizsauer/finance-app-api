name: Deploy

on:
    push:
        branches:
            - main

jobs:
    check:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '20'

            - name: Create .env.test file
              run: |
                  echo "DATABASE_URL=postgresql://root:password@localhost:5433/financeapp" > .env.test
                  echo "JWT_ACCESS_TOKEN_SECRET=secret" >> .env.test
                  echo "JWT_REFRESH_TOKENSECRET=secret2" >> .env.test

            - name: Install dependencies
              run: npm ci --include=dev

            - name: ESLint Check
              run: npm run eslint:check
            - name: ESLint Fix
              run: npm run eslint:fix

            - name: Prettier Check
              run: npm run prettier:check
            - name: Prettier Fix
              run: npm run prettier:fix

            - name: Tests
              run: npm run test
    migrate:
        runs-on: ubuntu-latest
        needs: check
        environment: production
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '20'

            - name: Install dependencies
              run: npm ci --include=dev

            - name: Create .env file
              run: |
                  echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > .env
                  echo "JWT_ACCESS_TOKEN_SECRET=${{ secrets.JWT_ACCESS_TOKEN_SECRET }}" >> .env
                  echo "JWT_REFRESH_TOKENSECRET=${{ secrets.JWT_REFRESH_TOKENSECRET }}" >> .env

            - name: Run migrations
              run: npm run migrate:deploy

    deploy:
        runs-on: ubuntu-latest
        needs: migrate
        environment: production
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Check secret
              run: echo "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"

            - name: Deploy to production
              run: |
                  curl "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"
